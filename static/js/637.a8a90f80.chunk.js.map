{"version":3,"file":"static/js/637.a8a90f80.chunk.js","mappings":"2OASIA,EAASC,EAAAA,GAAW,CACtBC,SAAUD,EAAAA,GAAW,kBAAkBE,SAAS,oBAChDC,SAAUH,EAAAA,GAAW,sBAAsBE,SAAS,0BA6EtD,UA1EkB,WAClB,IAAME,GAAWC,EAAAA,EAAAA,MACVC,GAAUC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAA3BH,QAEPI,EAAAA,EAAAA,YAAU,WAEPJ,KACFK,EAAAA,EAAAA,IAAML,GACNM,YAAW,WACVR,GAASS,EAAAA,EAAAA,KACT,GAAE,KAMH,GAAE,CAACP,EAAQF,IAYV,OACE,4BACE,eAAIU,UAAU,iCAAd,qBACA,SAAC,KAAD,CACEC,cAde,CACnBd,SAAU,GACVE,SAAU,IAaNa,SAVe,SAACC,EAAD,GAA2B,IAAjBC,EAAgB,EAAhBA,UAC7Bd,GAASe,EAAAA,EAAAA,IAAMF,IACfC,GACD,EAQKE,iBAAkBrB,EAHpB,UAKE,UAAC,KAAD,CAAMe,UAAU,kDAAhB,WACE,SAAC,KAAD,CACEO,KAAK,OACLC,KAAK,WACLC,YAAY,WACZT,UAAU,4CAEZ,SAAC,KAAD,CAAcU,UAAU,IAAIV,UAAU,uBAAuBQ,KAAK,cAClE,SAAC,KAAD,CACED,KAAK,WACLC,KAAK,WACLC,YAAY,WACZT,UAAU,4CAEX,SAAC,KAAD,CAAcQ,KAAK,WAAWE,UAAU,IAAIV,UAAU,0BACvD,iBAAKA,UAAU,wCAAf,WACE,mBACEO,KAAK,SACLP,UAAU,oDAFZ,qBAMA,eAAGA,UAAU,YAAb,yCAC+B,KAC7B,SAAC,KAAD,CACEW,GAAG,YACHX,UAAU,6CAFZ,kCAYb,C","sources":["pages/LoginPage.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Field, Form, Formik, ErrorMessage } from \"formik\";\nimport { NavLink } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../redux/auth/operations\";\nimport { toast } from \"react-toastify\";\nimport { removeStatus } from \"../redux/auth/slice\";\n\nlet schema = yup.object({\n  username: yup.string(\"Type your name\").required(\"Name is required\"),\n  password: yup.string(\"Type your password\").required(\"Password is required\"),\n});\n\nconst LoginPage = () => {\nconst dispatch = useDispatch()\nconst {status} = useSelector(state => state.auth);\n\nuseEffect(() => {\n  \nif(status){\n toast(status)\n setTimeout(() => {\n  dispatch(removeStatus())\n }, 5000)\n}\n\n// return () => {\n//   dispatch(removeStatus())\n// }\n}, [status, dispatch])\n\n  const initialValue = {\n    username: \"\",\n    password: \"\",\n  };\n\n  const onSubmitForm = (value, { resetForm }) => {\n    dispatch(login(value))\n    resetForm();\n  };\n\n  return (\n    <div>\n      <h1 className=\"text-4xl text-center mt-8 mb-8\">Log in</h1>\n      <Formik\n        initialValues={initialValue}\n        onSubmit={onSubmitForm}\n        validationSchema={schema}\n      >\n        <Form className=\"flex justify-center items-center gap-4 flex-col\">\n          <Field\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Username\"\n            className=\"border-2 py-2 px-2 w-1/4 text-gray-600\"\n          />\n          <ErrorMessage component='p' className=\"text-red-600 text-sm\" name=\"username\" />\n          <Field\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            className=\"border-2 py-2 px-2 w-1/4 text-gray-600\"\n          />\n           <ErrorMessage name=\"password\" component='p' className=\"text-red-600 text-sm\" />\n          <div className=\"flex flex-col gap-4 mt-4 items-center\">\n            <button\n              type=\"submit\"\n              className=\"bg-[#10a6e9] px-4 py-2 text-white rounded-xl w-56\"\n            >\n              Log in\n            </button>\n            <p className=\"text-base\">\n              If you don't have an acount.{\" \"}\n              <NavLink\n                to=\"/register\"\n                className=\"text-[#10a6e9] border-b-2 border-[#10a6e9]\"\n              >\n                Sign in\n              </NavLink>\n            </p>\n          </div>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["schema","yup","username","required","password","dispatch","useDispatch","status","useSelector","state","auth","useEffect","toast","setTimeout","removeStatus","className","initialValues","onSubmit","value","resetForm","login","validationSchema","type","name","placeholder","component","to"],"sourceRoot":""}