{"version":3,"file":"static/js/432.61e71909.chunk.js","mappings":"2OASIA,EAASC,EAAAA,GAAW,CACtBC,SAAUD,EAAAA,GAAW,kBAAkBE,SAAS,oBAChDC,SAAUH,EAAAA,GAAW,sBAAsBE,SAAS,0BA4EtD,UAzEqB,WACrB,IAAME,GAAWC,EAAAA,EAAAA,MACZC,GAAUC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAA3BH,QAELI,EAAAA,EAAAA,YAAU,WAMV,OAJGJ,IACDK,EAAAA,EAAAA,IAAML,GAGD,WACLF,GAASQ,EAAAA,EAAAA,KACV,CAEA,GAAE,CAACN,EAAQF,IAaV,OACE,4BACE,eAAIS,UAAU,iCAAd,sBACA,SAAC,KAAD,CACEC,cAfe,CACnBb,SAAU,GACVE,SAAU,IAcNY,SAXe,SAACC,EAAD,GAA2B,IAAjBC,EAAgB,EAAhBA,UAC7BC,QAAQC,IAAIH,GACZZ,GAASgB,EAAAA,EAAAA,IAASJ,IAClBC,GACD,EAQKI,iBAAkBtB,EAHpB,UAKE,UAAC,KAAD,CAAMc,UAAU,kDAAhB,WACE,SAAC,KAAD,CACES,KAAK,OACLC,KAAK,WACLC,YAAY,WACZX,UAAU,sDAEZ,SAAC,KAAD,CAAcY,UAAU,IAAIZ,UAAU,uBAAuBU,KAAK,cAClE,SAAC,KAAD,CACED,KAAK,WACLC,KAAK,WACLC,YAAY,WACZX,UAAU,sDAEX,SAAC,KAAD,CAAcU,KAAK,WAAWE,UAAU,IAAIZ,UAAU,0BACvD,iBAAKA,UAAU,wCAAf,WACE,mBACES,KAAK,SACLT,UAAU,oDAFZ,sBAMA,eAAGA,UAAU,YAAb,oCAEE,SAAC,KAAD,CACEa,GAAG,SACHb,UAAU,6CAFZ,iCAYb,C","sources":["pages/RegisterPage.jsx"],"sourcesContent":["import React, {  useEffect } from \"react\";\nimport { Field, Form, Formik, ErrorMessage } from \"formik\";\nimport { NavLink } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { register } from \"../redux/auth/operations\";\nimport { toast } from \"react-toastify\";\nimport { removeStatus } from \"../redux/auth/slice\";\n\nlet schema = yup.object({\n  username: yup.string(\"Type your name\").required(\"Name is required\"),\n  password: yup.string(\"Type your password\").required(\"Password is required\"),\n});\n\nconst RegisterPage = () => {\nconst dispatch = useDispatch();\nlet {status} = useSelector(state => state.auth)\n\nuseEffect(() => {\n\nif(status){\n  toast(status)\n}\n\nreturn () => {\n  dispatch(removeStatus())\n}\n\n}, [status, dispatch])\n\n  const initialValue = {\n    username: \"\",\n    password: \"\",\n  };\n\n  const onSubmitForm = (value, { resetForm }) => {\n    console.log(value);\n    dispatch(register(value))\n    resetForm();\n  };\n\n  return (\n    <div>\n      <h1 className=\"text-4xl text-center mt-8 mb-8\">Sign in</h1>\n      <Formik\n        initialValues={initialValue}\n        onSubmit={onSubmitForm}\n        validationSchema={schema}\n      >\n        <Form className=\"flex justify-center items-center gap-4 flex-col\">\n          <Field\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Username\"\n            className=\"w-full border-2 py-2 px-2 md:w-1/4 text-gray-600\"\n          />\n          <ErrorMessage component='p' className=\"text-red-600 text-sm\" name=\"username\" />\n          <Field\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            className=\"w-full border-2 py-2 px-2 md:w-1/4 text-gray-600\"\n          />\n           <ErrorMessage name=\"password\" component='p' className=\"text-red-600 text-sm\" />\n          <div className=\"flex flex-col gap-4 mt-4 items-center\">\n            <button\n              type=\"submit\"\n              className=\"bg-[#10a6e9] px-4 py-2 text-white rounded-xl w-56\"\n            >\n              Sign in\n            </button>\n            <p className=\"text-base\">\n              If you have an acount.\n              <NavLink\n                to=\"/login\"\n                className=\"text-[#10a6e9] border-b-2 border-[#10a6e9]\"\n              >\n                Log in\n              </NavLink>\n            </p>\n          </div>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["schema","yup","username","required","password","dispatch","useDispatch","status","useSelector","state","auth","useEffect","toast","removeStatus","className","initialValues","onSubmit","value","resetForm","console","log","register","validationSchema","type","name","placeholder","component","to"],"sourceRoot":""}