{"version":3,"file":"static/js/235.ebbe8ac1.chunk.js","mappings":"8SAyEA,EAhEsB,SAAC,GAAY,IAAXA,EAAU,EAAVA,KACbC,EAAiFD,EAAjFC,MAAOC,EAA0EF,EAA1EE,KAAMC,EAAoEH,EAApEG,OAAQC,EAA4DJ,EAA5DI,SAAUC,EAAkDL,EAAlDK,UAAWC,EAAuCN,EAAvCM,UAAWC,EAA4BP,EAA5BO,MAAOC,EAAqBR,EAArBQ,SAAeC,EAAMT,EAAXU,IAE7E,GAA4BC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAtCC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,YACb,GAAoCC,EAAAA,EAAAA,UAAQ,OAACX,QAAD,IAACA,OAAD,EAACA,EAAWY,SAAX,OAAoBH,QAApB,IAAoBA,OAApB,EAAoBA,EAAMJ,MAAvE,eAAOQ,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAoBnB,OAAQ,gBAAIC,UAAU,wFAAd,WACR,UAAC,KAAD,CAAMC,GAAE,WAAMhB,GAAd,UACCN,IAAU,gBAAKqB,UAAU,wCAAf,UACT,gBAAKE,IAAKvB,EAAQwB,IAAKxB,EAAOyB,KAAMJ,UAAU,yDAEhD,iBAAKA,UAAU,yCAAf,WACE,kBAAMA,UAAU,oCAAhB,6CAA4DpB,MAC5D,iBAAMoB,UAAU,oCAAhB,UAAoD,SAAC,IAAD,CAAQK,KAAMvB,EAAWwB,OAAO,qBAExF,iBAAKN,UAAU,2BAAf,WACA,eAAIA,UAAU,yBAAd,SAAwCvB,KACtC,cAAGuB,UAAU,iDAAb,SAA+DtB,QAEjE,gBAAKsB,UAAU,yCAAf,UACU,iBAAKA,UAAU,0BAAf,WACA,oBACEO,KAAK,SACLP,UAAU,2EAFZ,WAIE,SAAC,MAAD,IAJF,KAIgB,0BAAOjB,QAEvB,oBACEwB,KAAK,SACLP,UAAU,2EAFZ,WAIE,SAAC,MAAD,IAJF,KAIuB,2BAAe,OAARhB,QAAQ,IAARA,OAAA,EAAAA,EAAUwB,SAAU,eAKzDd,GAAc,mBAAQM,UAAU,oCAAoCS,QAAS,kBApCjD,SAAAxB,GACzBa,GAASY,EAAAA,EAAAA,IAAmBzB,IAC5BU,GAAc,GACdgB,EAAAA,GAAAA,MAAY,4JACb,CAgCiFC,CAAmB3B,EAAzB,EAA/D,UACP,SAAC,MAAD,OACa,mBAAQe,UAAU,oCAAoCS,QAAS,kBAlD1D,SAAAxB,GACtB,IAAIM,EAGF,OAFAoB,EAAAA,GAAAA,MAAY,gPACZf,EAAS,UAIXE,GAASe,EAAAA,EAAAA,IAAgB5B,IACzBU,GAAc,GACdgB,EAAAA,GAAAA,QAAc,oIACf,CAwCuFG,CAAgB7B,EAAtB,EAA/D,UACb,SAAC,MAAD,QAGT,EC9DD,EAPkB,SAAC,GAAa,IAAZ8B,EAAW,EAAXA,MAClB,OAAO,eAAIf,UAAU,4DAAd,gBACNe,QADM,IACNA,OADM,EACNA,EAAOC,KAAI,SAAAxC,GAAI,OAAIA,IAAQ,SAAC,EAAD,CAA8BA,KAAMA,GAAhBA,EAAKU,IAArC,KAEjB,ECUD,EAXkB,WAChB,IAAMY,GAAWC,EAAAA,EAAAA,MACVgB,GAAS5B,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMZ,IAAV,IAA1BuC,MAMP,OAJAE,EAAAA,EAAAA,YAAU,WACRnB,GAASoB,EAAAA,EAAAA,MACV,GAAE,CAACpB,KAEG,8BAAoB,IAAjBiB,EAAMP,QAAe,8IAAkC,SAAC,EAAD,CAAWO,MAAOA,KACpF,C","sources":["components/UserPostsItem.jsx","components/UserPosts.jsx","pages/PostsPage.jsx"],"sourcesContent":["import {AiFillEye, AiOutlineMessage} from 'react-icons/ai'\nimport Moment from 'react-moment'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { BsBookmark, BsFillBookmarkFill } from \"react-icons/bs\";\nimport { removeFromFavorite, setFavoritePost } from \"../redux/post/operatins\";\nimport { toast } from \"react-toastify\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\n\nconst UserPostsItem = ({post}) => {\n    const {title, text, imgUrl, username, favorites, createdAt, views, comments, _id: id} = post\n\n    const {user, isUserLogin} = useSelector(state => state.auth);\n    const [isFavorite, setIsFavorite] = useState(favorites?.includes(user?._id));\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n  \n    const addFavoritePost = id => {\n      if(!isUserLogin){\n        toast.error(\"Щоб додати пост, ви маєте зайти у свій кабінет\")\n        navigate('/login')\n        return;\n      }\n  \n      dispatch(setFavoritePost(id))\n      setIsFavorite(true)\n      toast.success('Пост доданий у збережені')\n    }\n  \n    const removeFavoritePost = id => {\n      dispatch(removeFromFavorite(id))\n      setIsFavorite(false)\n      toast.error('Пост видалений із збережених')\n    }\n\n  return  <li className='flex flex-col basis-1/4 gap-5 flex-grow border-solid border-2 p-3 rounded-lg relative'>\n  <Link to={`/${id}`}>\n  {imgUrl && <div className='p-2 rounded-lg flex h-[11rem] mb:h-80'>\n    <img src={imgUrl} alt={imgUrl.name} className='object-contain rounded-2xl md:object-cover w-full'/>\n  </div>}\n  <div className='flex justify-between items-center mt-5'>\n    <span className='text-xs text-[#030303] opacity-50'>автор: {username}</span>\n    <span className='text-xs text-[#030303] opacity-50'><Moment date={createdAt} format='D MMM YYYY'/></span>\n  </div>\n<div className='flex flex-col gap-2 mt-2'>\n<h2 className='text-lg text-[#030303]'>{title}</h2>\n  <p className='text-xs text-[#030303] opacity-60 line-clamp-3'>{text}</p>\n</div>\n<div className=\"flex justify-between items-center mt-4\">\n          <div className=\"flex items-center gap-3\">\n          <button\n            type=\"button\"\n            className=\"flex items-center justify-center gap-2 text-sm text-[#030303] opacity-50\"\n          >\n            <AiFillEye /> <span>{views}</span>\n          </button>\n          <button\n            type=\"button\"\n            className=\"flex items-center justify-center gap-2 text-sm text-[#030303] opacity-50\"\n          >\n            <AiOutlineMessage /> <span>{comments?.length || 0}</span>\n          </button>\n          </div>\n        </div>\n  </Link>\n  {isFavorite ?  <button className=\"absolute bottom-5 right-5 text-lg\" onClick={() => removeFavoritePost(id)}>\n          <BsFillBookmarkFill/>\n          </button> :  <button className=\"absolute bottom-5 right-5 text-lg\" onClick={() => addFavoritePost(id)}>\n          <BsBookmark/>\n          </button>}\n</li>\n}\n\nexport default UserPostsItem\n","import UserPostsItem from \"./UserPostsItem\"\n\nconst UserPosts = ({posts}) => {\n  return <ul className=\"grid gap-4 grid-cols-1 md:grid-cols-2 lg:grid-cols-3 mt-5\">\n  {posts?.map(post => post && <UserPostsItem key={post._id} post={post}/> )}\n</ul>\n}\n\n\nexport default UserPosts\n","import { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getUserPosts } from \"../redux/post/operatins\"\nimport UserPosts from \"../components/UserPosts\"\n\nconst PostsPage = () => {\n  const dispatch = useDispatch()\n  const {posts} = useSelector(state => state.post)\n\n  useEffect(() => {\n    dispatch(getUserPosts())\n  }, [dispatch])\n\n  return <>{posts.length === 0 ? <h2>Ви ще не добавили пост</h2> : <UserPosts posts={posts}/>}</>\n}\n\nexport default PostsPage\n"],"names":["post","title","text","imgUrl","username","favorites","createdAt","views","comments","id","_id","useSelector","state","auth","user","isUserLogin","useState","includes","isFavorite","setIsFavorite","navigate","useNavigate","dispatch","useDispatch","className","to","src","alt","name","date","format","type","length","onClick","removeFromFavorite","toast","removeFavoritePost","setFavoritePost","addFavoritePost","posts","map","useEffect","getUserPosts"],"sourceRoot":""}