{"version":3,"file":"static/js/215.e631413e.chunk.js","mappings":"uNAqDA,UA/CsB,WACtB,IAAOA,GAAMC,EAAAA,EAAAA,MAAND,GAEDE,GADUC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAA1BC,MACgBC,MAAK,SAAAF,GAAI,OAAIA,EAAKG,MAAQR,CAAjB,IAChC,GAA0BS,EAAAA,EAAAA,UAASP,EAASQ,OAA5C,eAAOA,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAASP,EAASU,MAA1C,eAAOA,EAAP,KAAaC,EAAb,KACA,GAAqBJ,EAAAA,EAAAA,UAASP,EAASY,QAAhCC,GAAP,eACA,GAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOO,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAiBf,OAAO,gBAAKC,UAAU,wCAAf,UACL,kBAAMA,UAAU,6BAA6BC,SAhBxB,SAACC,GAC1BA,EAAEC,iBACF,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASlB,GACzBgB,EAASE,OAAO,OAAQhB,GACxBc,EAASE,OAAO,QAASZ,GACzBE,GAASW,EAAAA,EAAAA,IAAW,CAAC7B,GAAAA,EAAI0B,SAAAA,KACzBI,EAAAA,GAAAA,QAAc,kHACdV,EAAS,SACR,EAOG,UACKL,IAAeC,GAAQ,gBAAKe,IAAG,yCAAoChB,GAAciB,IAAI,cAAgB,gBAAKD,IAAKE,IAAIC,gBAAgBlB,GAAQgB,IAAI,cACpJ,mBAAOV,UAAU,gHAAjB,qHAEI,kBACEa,KAAK,OACLb,UAAU,SACVc,SAAU,SAACZ,GAAD,OAAOP,EAASO,EAAEa,OAAOC,MAAM,GAA/B,QAGhB,kBAAOH,KAAK,OAAOI,MAAO7B,EAAO0B,SAAU,SAAAZ,GAAC,OAAIb,EAASa,EAAEa,OAAOE,MAAtB,EAA8BjB,UAAU,yEACpF,qBAAUa,KAAK,OAAOI,MAAO3B,EAAMwB,SAAU,SAAAZ,GAAC,OAAIX,EAAQW,EAAEa,OAAOE,MAArB,EAA6BjB,UAAU,+FACrF,iBAAKA,UAAU,0BAAf,WACA,mBAAQa,KAAK,SAASb,UAAU,uDAAhC,mBACA,mBAAQa,KAAK,SAASK,QAnBL,WACnBpB,EAAS,SACV,EAiBgDE,UAAU,qDAAvD,2BAIH,C","sources":["pages/EdditPostPage.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport { updatePost } from \"../redux/post/operatins\";\nimport { toast } from \"react-toastify\";\n\nconst EdditPostPage = () => {\nconst {id} = useParams();\nconst {posts} = useSelector(state => state.post);\nconst findPost = posts.find(post => post._id === id);\nconst [title, setTitle] = useState(findPost.title)\nconst [text, setText] = useState(findPost.text)\nconst [currentImg] = useState(findPost.imgUrl)\nconst [image, setImage] = useState(\"\")\nconst dispatch = useDispatch();\nconst navigate = useNavigate();\n\nconst handleFormSubmit = (e) => {\ne.preventDefault();\nconst postData = new FormData();\npostData.append(\"title\", title);\npostData.append(\"text\", text);\npostData.append(\"image\", image);\ndispatch(updatePost({id, postData}))\ntoast.success('Пост успішно змінено')\nnavigate('/posts')\n}\n\nconst handleCansel = () => {\n  navigate('/posts')\n}\n\n  return <div className=\"flex mt-10 m-auto w-full md:w-[650px]\">\n    <form className=\"flex flex-col gap-3 w-full\" onSubmit={handleFormSubmit}>\n      {!!currentImg && !image ? <img src={`https://blog-t4w3.onrender.com/${currentImg}`} alt=\"Post img\" /> : <img src={URL.createObjectURL(image)} alt=\"Post img\" />}\n    <label className=\"text-gray-300 bg-gray-600 text-sm flex justify-center items-center border-2 border-dotted cursor-pointer py-4\">\n        Змінити зображення\n        <input\n          type=\"file\"\n          className=\"hidden\"\n          onChange={(e) => setImage(e.target.files[0])}\n        />\n        </label>\n    <input type=\"text\" value={title} onChange={e => setTitle(e.target.value)} className=\"border-2 border-solid py-4 px-2 text-sm texs-[#030303] outline-none\" />\n    <textarea type=\"text\" value={text} onChange={e => setText(e.target.value)} className=\"border-2 border-solid py-4 px-2 text-sm texs-[#030303] resize-none min-h-min outline-none\" />\n    <div className=\"flex gap-3 items-center\">\n    <button type=\"submit\" className=\"bg-[#00684a] py-3 px-6 text-sm text-white rounded-lg\">Save</button>\n    <button type=\"button\" onClick={handleCansel} className=\"bg-red-700 py-3 px-6 text-sm text-white rounded-lg\">Cansel</button>\n    </div>\n  </form>\n  </div>\n}\n\nexport default EdditPostPage\n"],"names":["id","useParams","findPost","useSelector","state","post","posts","find","_id","useState","title","setTitle","text","setText","imgUrl","currentImg","image","setImage","dispatch","useDispatch","navigate","useNavigate","className","onSubmit","e","preventDefault","postData","FormData","append","updatePost","toast","src","alt","URL","createObjectURL","type","onChange","target","files","value","onClick"],"sourceRoot":""}